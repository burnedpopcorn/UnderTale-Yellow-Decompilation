var view_x = __view_get(e__VW.XView, 0);
draw_background(3506, (view_x + 200) / 1.75, 0);
var sin_offset = (sin(current_time / 1000) * 10) - 3;
draw_primitive_begin(pr_trianglelist);
draw_vertex_color(0, gradient_height + sin_offset, colors[2], 0);
draw_vertex_color(room_width, gradient_height + sin_offset, colors[2], 0);
draw_vertex_color(room_width, room_height, colors[0], 0.7);
draw_vertex_color(room_width, room_height, colors[0], 0.7);
draw_vertex_color(0, room_height, colors[0], 0.7);
draw_vertex_color(0, gradient_height + sin_offset, colors[2], 0);
draw_primitive_end();
draw_primitive_begin_texture(pr_trianglestrip, sprite_get_texture(spr_steamworks_34_liquidfalls, image));
draw_vertex_texture_color((view_x + 800) / 2, 0, 0, 0, colors[2], 1);
draw_vertex_texture_color(((view_x + 800) / 2) + info.width, 0, 1, 0, colors[2], 1);
draw_vertex_texture_color(((view_x + 800) / 2) + info.width, info.height, 1, 1, colors[0], 1);
draw_vertex_texture_color((view_x + 800) / 2, info.height, 0, 1, colors[0], 1);
draw_vertex_texture_color((view_x + 800) / 2, 0, 0, 0, colors[2], 1);
draw_primitive_end();
draw_primitive_begin_texture(pr_trianglestrip, sprite_get_texture(spr_steamworks_34_liquidfalls, image + spr_doorway));
draw_vertex_texture_color((view_x + 1200) / 2, 0, 0, 0, colors[2], 1);
draw_vertex_texture_color(((view_x + 1200) / 2) + info.width, 0, 1, 0, colors[2], 1);
draw_vertex_texture_color(((view_x + 1200) / 2) + info.width, info.height, 1, 1, colors[0], 1);
draw_vertex_texture_color((view_x + 1200) / 2, info.height, 0, 1, colors[0], 1);
draw_vertex_texture_color((view_x + 1200) / 2, 0, 0, 0, colors[2], 1);
draw_primitive_end();
draw_primitive_begin_texture(pr_trianglestrip, sprite_get_texture(spr_steamworks_34_liquidfalls, image + spr_shot_strong_nails));
draw_vertex_texture_color((view_x + 1500) / 2, 0, 0, 0, colors[2], 1);
draw_vertex_texture_color(((view_x + 1500) / 2) + info.width, 0, 1, 0, colors[2], 1);
draw_vertex_texture_color(((view_x + 1500) / 2) + info.width, info.height, 1, 1, colors[0], 1);
draw_vertex_texture_color((view_x + 1500) / 2, info.height, 0, 1, colors[0], 1);
draw_vertex_texture_color((view_x + 1500) / 2, 0, 0, 0, colors[2], 1);
draw_primitive_end();
image += 0.5;
image %= info.num_subimages;
